# PIPELINE DEFINITION
# Name: testpipeline
components:
  comp-run-a-file:
    executorLabel: exec-run-a-file
deploymentSpec:
  executors:
    exec-run-a-file:
      container:
        args:
        - 'sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"

          sh -c "[[ -e ''/opt/app-root/bin/utils/bootstrapper.py'' ]] && (echo ''bootstrapper.py
          file already exists''; cp ''/opt/app-root/bin/utils/bootstrapper.py'' .)
          || (echo ''Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'';
          curl --fail -H ''Cache-Control: no-cache'' -L ''https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py''
          --output bootstrapper.py)"

          sh -c "[[ -e ''/opt/app-root/bin/utils/requirements-elyra.txt'' ]] && (echo
          ''requirements-elyra.txt file already exists''; cp ''/opt/app-root/bin/utils/requirements-elyra.txt''
          .) || (echo ''Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'';
          curl --fail -H ''Cache-Control: no-cache'' -L ''https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt''
          --output requirements-elyra.txt)"

          sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt
          && python3 bootstrapper.py --pipeline-name ''testpipeline'' --cos-endpoint
          ''https://minio-api-minio.apps.cluster-fmslm.fmslm.sandbox2375.opentlc.com''
          --cos-bucket ''301-pipe'' --cos-directory ''testpipeline-0402170106'' --cos-dependencies-archive
          ''testing-f3305890-0f51-4e36-87a3-1f2552458fe6.tar.gz'' --file ''testing.py''
          "

          '
        command:
        - sh
        - -c
        env:
        - name: ELYRA_RUNTIME_ENV
          value: kfp
        - name: ELYRA_ENABLE_PIPELINE_INFO
          value: 'True'
        - name: ELYRA_WRITABLE_CONTAINER_DIR
          value: /tmp
        - name: ELYRA_RUN_NAME
          value: '{{workflow.uid}}'
        image: quay.io/modh/runtime-images@sha256:a6e87550d7f932732b8e52c309d356fb76ae0ba0fd0b8566de0ba4ff49c2db84
pipelineInfo:
  name: testpipeline
root:
  dag:
    tasks:
      run-a-file:
        cachingOptions:
          enableCache: false
        componentRef:
          name: comp-run-a-file
        taskInfo:
          name: testing
schemaVersion: 2.1.0
sdkVersion: kfp-2.9.0
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-run-a-file:
          podMetadata:
            annotations:
              elyra/node-file-name: testing.py
              elyra/pipeline-source: testpipeline.pipeline
            labels:
              elyra/experiment-name: ''
              elyra/node-name: testing
              elyra/node-type: notebook-script
              elyra/pipeline-name: testpipeline
              elyra/pipeline-version: ''
          secretAsEnv:
          - keyToEnv:
            - envVar: AWS_ACCESS_KEY_ID
              secretKey: AWS_ACCESS_KEY_ID
            - envVar: AWS_SECRET_ACCESS_KEY
              secretKey: AWS_SECRET_ACCESS_KEY
            secretName: dashboard-dspa-secret

#
# Generated by Elyra 4.2.0
#
import kfp
from kubernetes.client import *
from kubernetes.client.models import *
from kfp.kubernetes import secret, volume

from typing import Optional

# ------------------------------------------------------------------
# kfp-kubernetes 1.1.0 is misisng these function, explicity using them,
# TODO: remove these function once a new release of kfp-kubernetes is made.
# ------------------------------------------------------------------

from google.protobuf import json_format
from kfp.dsl import PipelineTask
from kfp.kubernetes import common
from kfp.kubernetes import kubernetes_executor_config_pb2 as pb

from kfp.kubernetes import add_toleration, add_pod_label, add_pod_annotation


component_def_e70e76bc98ccc7c4524b7e1b8daec447866574c646d9b965efe8b9699203edd0 = """
name: Run a file
description: Run a Jupyter notebook or Python/R script

implementation:
  container:
    image: quay.io/modh/runtime-images@sha256:a6e87550d7f932732b8e52c309d356fb76ae0ba0fd0b8566de0ba4ff49c2db84
    command: [sh, -c]
    args:
    - |
      sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"
      sh -c "[[ -e '/opt/app-root/bin/utils/bootstrapper.py' ]] && (echo 'bootstrapper.py file already exists'; cp '/opt/app-root/bin/utils/bootstrapper.py' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py' --output bootstrapper.py)"
      sh -c "[[ -e '/opt/app-root/bin/utils/requirements-elyra.txt' ]] && (echo 'requirements-elyra.txt file already exists'; cp '/opt/app-root/bin/utils/requirements-elyra.txt' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt' --output requirements-elyra.txt)"
      sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py --pipeline-name 'docling_elyra_summit' --cos-endpoint 'https://minio-api-granite-model-project.apps.cluster-hdv5q.hdv5q.sandbox4022.opentlc.com' --cos-bucket 'pipelines' --cos-directory 'docling_elyra_summit-0424175206' --cos-dependencies-archive 'copy_files-e4165c2f-c2b3-4415-92b8-a0d36b4b4e69.tar.gz' --file 'elyra_docling_rh_summit/openshift_solution/copy_files.py' --outputs 'sourcedocs/2304.14953v2-part1.pdf;sourcedocs/2304.14953v2-part2.docx' "
"""

factory_e70e76bc98ccc7c4524b7e1b8daec447866574c646d9b965efe8b9699203edd0 = (
    kfp.components.load_component_from_text(
        component_def_e70e76bc98ccc7c4524b7e1b8daec447866574c646d9b965efe8b9699203edd0
    )
)

component_def_1d20ad2b8e3bfd3c86ad47066532c338f7636496c8bd498a8bfb80f27864336c = """
name: Run a file
description: Run a Jupyter notebook or Python/R script

implementation:
  container:
    image: quay.io/modh/runtime-images@sha256:a6e87550d7f932732b8e52c309d356fb76ae0ba0fd0b8566de0ba4ff49c2db84
    command: [sh, -c]
    args:
    - |
      sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"
      sh -c "[[ -e '/opt/app-root/bin/utils/bootstrapper.py' ]] && (echo 'bootstrapper.py file already exists'; cp '/opt/app-root/bin/utils/bootstrapper.py' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py' --output bootstrapper.py)"
      sh -c "[[ -e '/opt/app-root/bin/utils/requirements-elyra.txt' ]] && (echo 'requirements-elyra.txt file already exists'; cp '/opt/app-root/bin/utils/requirements-elyra.txt' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt' --output requirements-elyra.txt)"
      sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py --pipeline-name 'docling_elyra_summit' --cos-endpoint 'https://minio-api-granite-model-project.apps.cluster-hdv5q.hdv5q.sandbox4022.opentlc.com' --cos-bucket 'pipelines' --cos-directory 'docling_elyra_summit-0424175206' --cos-dependencies-archive 'ingest-summit-9da8883d-0641-40ae-8fa3-ac56dcc1fb5b.tar.gz' --file 'instruct-generate/ingest-summit.ipynb' --inputs 'sourcedocs/2304.14953v2-part1.pdf;sourcedocs/2304.14953v2-part2.docx' --outputs 'resultdocs/2304.14953v2-part1.md;resultdocs/2304.14953v2-part2.md' "
"""

factory_1d20ad2b8e3bfd3c86ad47066532c338f7636496c8bd498a8bfb80f27864336c = (
    kfp.components.load_component_from_text(
        component_def_1d20ad2b8e3bfd3c86ad47066532c338f7636496c8bd498a8bfb80f27864336c
    )
)

component_def_cef76bf6174727948a57ad8a68a91b5685a3accc843a11217591cbc1ab9da6b5 = """
name: Run a file
description: Run a Jupyter notebook or Python/R script

implementation:
  container:
    image: quay.io/modh/runtime-images@sha256:a6e87550d7f932732b8e52c309d356fb76ae0ba0fd0b8566de0ba4ff49c2db84
    command: [sh, -c]
    args:
    - |
      sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"
      sh -c "[[ -e '/opt/app-root/bin/utils/bootstrapper.py' ]] && (echo 'bootstrapper.py file already exists'; cp '/opt/app-root/bin/utils/bootstrapper.py' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py' --output bootstrapper.py)"
      sh -c "[[ -e '/opt/app-root/bin/utils/requirements-elyra.txt' ]] && (echo 'requirements-elyra.txt file already exists'; cp '/opt/app-root/bin/utils/requirements-elyra.txt' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt' --output requirements-elyra.txt)"
      sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py --pipeline-name 'docling_elyra_summit' --cos-endpoint 'https://minio-api-granite-model-project.apps.cluster-hdv5q.hdv5q.sandbox4022.opentlc.com' --cos-bucket 'pipelines' --cos-directory 'docling_elyra_summit-0424175206' --cos-dependencies-archive 'combine_markdown-db01761f-d8d8-4a07-907c-f4af071227c6.tar.gz' --file 'elyra_docling_rh_summit/openshift_solution/combine_markdown.py' --inputs 'sourcedocs/2304.14953v2-part1.pdf;resultdocs/2304.14953v2-part2.md;resultdocs/2304.14953v2-part1.md;sourcedocs/2304.14953v2-part2.docx' --outputs 'resultdocs/combined.md' "
"""

factory_cef76bf6174727948a57ad8a68a91b5685a3accc843a11217591cbc1ab9da6b5 = (
    kfp.components.load_component_from_text(
        component_def_cef76bf6174727948a57ad8a68a91b5685a3accc843a11217591cbc1ab9da6b5
    )
)

component_def_7feeebb9633293000f7aa7fae9d0c8f59580d52f0c16ff53df5e25b4c385e90e = """
name: Run a file
description: Run a Jupyter notebook or Python/R script

implementation:
  container:
    image: quay.io/modh/runtime-images@sha256:a6e87550d7f932732b8e52c309d356fb76ae0ba0fd0b8566de0ba4ff49c2db84
    command: [sh, -c]
    args:
    - |
      sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"
      sh -c "[[ -e '/opt/app-root/bin/utils/bootstrapper.py' ]] && (echo 'bootstrapper.py file already exists'; cp '/opt/app-root/bin/utils/bootstrapper.py' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py' --output bootstrapper.py)"
      sh -c "[[ -e '/opt/app-root/bin/utils/requirements-elyra.txt' ]] && (echo 'requirements-elyra.txt file already exists'; cp '/opt/app-root/bin/utils/requirements-elyra.txt' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt' --output requirements-elyra.txt)"
      sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py --pipeline-name 'docling_elyra_summit' --cos-endpoint 'https://minio-api-granite-model-project.apps.cluster-hdv5q.hdv5q.sandbox4022.opentlc.com' --cos-bucket 'pipelines' --cos-directory 'docling_elyra_summit-0424175206' --cos-dependencies-archive 'HITL_MarkdownReview-e91d428b-1397-4f77-9514-3f29be067bcd.tar.gz' --file 'elyra_docling_rh_summit/openshift_solution/HITL_MarkdownReview.ipynb' --inputs 'resultdocs/2304.14953v2-part1.md;sourcedocs/2304.14953v2-part2.docx;sourcedocs/2304.14953v2-part1.pdf;resultdocs/2304.14953v2-part2.md;resultdocs/combined.md' "
"""

factory_7feeebb9633293000f7aa7fae9d0c8f59580d52f0c16ff53df5e25b4c385e90e = (
    kfp.components.load_component_from_text(
        component_def_7feeebb9633293000f7aa7fae9d0c8f59580d52f0c16ff53df5e25b4c385e90e
    )
)

component_def_32bd7762a69c1f1e4e174e925beabd1540ed2f146114776f75b4f70d80c62b39 = """
name: Run a file
description: Run a Jupyter notebook or Python/R script

implementation:
  container:
    image: quay.io/modh/runtime-images@sha256:a6e87550d7f932732b8e52c309d356fb76ae0ba0fd0b8566de0ba4ff49c2db84
    command: [sh, -c]
    args:
    - |
      sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"
      sh -c "[[ -e '/opt/app-root/bin/utils/bootstrapper.py' ]] && (echo 'bootstrapper.py file already exists'; cp '/opt/app-root/bin/utils/bootstrapper.py' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py' --output bootstrapper.py)"
      sh -c "[[ -e '/opt/app-root/bin/utils/requirements-elyra.txt' ]] && (echo 'requirements-elyra.txt file already exists'; cp '/opt/app-root/bin/utils/requirements-elyra.txt' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt' --output requirements-elyra.txt)"
      sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py --pipeline-name 'docling_elyra_summit' --cos-endpoint 'https://minio-api-granite-model-project.apps.cluster-hdv5q.hdv5q.sandbox4022.opentlc.com' --cos-bucket 'pipelines' --cos-directory 'docling_elyra_summit-0424175206' --cos-dependencies-archive 'injest-splitter-8a30ef71-5ae7-4c47-b3b9-e1c583ed99fe.tar.gz' --file 'instruct-generate/injest-splitter.ipynb' --inputs 'resultdocs/2304.14953v2-part1.md;sourcedocs/2304.14953v2-part2.docx;sourcedocs/2304.14953v2-part1.pdf;resultdocs/2304.14953v2-part2.md;resultdocs/combined.md' "
"""

factory_32bd7762a69c1f1e4e174e925beabd1540ed2f146114776f75b4f70d80c62b39 = (
    kfp.components.load_component_from_text(
        component_def_32bd7762a69c1f1e4e174e925beabd1540ed2f146114776f75b4f70d80c62b39
    )
)

component_def_ba3ac441334dc976170e6a30252eb710ce7ab22a9bfce48e2b341550b4aa9a8f = """
name: Run a file
description: Run a Jupyter notebook or Python/R script

implementation:
  container:
    image: quay.io/modh/runtime-images@sha256:a6e87550d7f932732b8e52c309d356fb76ae0ba0fd0b8566de0ba4ff49c2db84
    command: [sh, -c]
    args:
    - |
      sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"
      sh -c "[[ -e '/opt/app-root/bin/utils/bootstrapper.py' ]] && (echo 'bootstrapper.py file already exists'; cp '/opt/app-root/bin/utils/bootstrapper.py' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py' --output bootstrapper.py)"
      sh -c "[[ -e '/opt/app-root/bin/utils/requirements-elyra.txt' ]] && (echo 'requirements-elyra.txt file already exists'; cp '/opt/app-root/bin/utils/requirements-elyra.txt' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt' --output requirements-elyra.txt)"
      sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py --pipeline-name 'docling_elyra_summit' --cos-endpoint 'https://minio-api-granite-model-project.apps.cluster-hdv5q.hdv5q.sandbox4022.opentlc.com' --cos-bucket 'pipelines' --cos-directory 'docling_elyra_summit-0424175206' --cos-dependencies-archive 'HITL_qna_review-b816de19-69a2-4660-a2af-ca808be3581a.tar.gz' --file 'elyra_docling_rh_summit/openshift_solution/HITL_qna_review.ipynb' --inputs 'resultdocs/2304.14953v2-part1.md;sourcedocs/2304.14953v2-part2.docx;sourcedocs/2304.14953v2-part1.pdf;resultdocs/2304.14953v2-part2.md;resultdocs/combined.md' "
"""

factory_ba3ac441334dc976170e6a30252eb710ce7ab22a9bfce48e2b341550b4aa9a8f = (
    kfp.components.load_component_from_text(
        component_def_ba3ac441334dc976170e6a30252eb710ce7ab22a9bfce48e2b341550b4aa9a8f
    )
)


@kfp.dsl.pipeline(name="docling_elyra_summit")
def generated_pipeline():

    # Task for node 'Ingest Files'
    task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69 = (
        factory_e70e76bc98ccc7c4524b7e1b8daec447866574c646d9b965efe8b9699203edd0()
    )

    secret.use_secret_as_env(
        task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69,
        "dashboard-dspa-secret",
        {
            "AWS_ACCESS_KEY_ID": "AWS_ACCESS_KEY_ID",
            "AWS_SECRET_ACCESS_KEY": "AWS_SECRET_ACCESS_KEY",
        },
    )

    task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69.set_display_name("Ingest Files")

    task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69.set_env_variable(
        name="ELYRA_RUNTIME_ENV", value="kfp"
    )

    task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69.set_env_variable(
        name="ELYRA_ENABLE_PIPELINE_INFO", value="True"
    )

    task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69.set_env_variable(
        name="ELYRA_WRITABLE_CONTAINER_DIR", value="/tmp"
    )

    task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69.set_env_variable(
        name="ELYRA_RUN_NAME", value="{{workflow.uid}}"
    )

    add_pod_label(
        task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69, "elyra/node-type", "notebook-script"
    )

    add_pod_label(
        task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69,
        "elyra/pipeline-name",
        "docling_elyra_summit",
    )

    add_pod_label(
        task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69, "elyra/pipeline-version", ""
    )

    add_pod_label(
        task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69, "elyra/experiment-name", ""
    )

    add_pod_label(
        task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69, "elyra/node-name", "Ingest_Files"
    )

    add_pod_annotation(
        task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69,
        "elyra/node-file-name",
        """elyra_docling_rh_summit/openshift_solution/copy_files.py""",
    )

    add_pod_annotation(
        task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69,
        "elyra/pipeline-source",
        """docling_elyra_summit.pipeline""",
    )

    # Task for node 'Docling'
    task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b = (
        factory_1d20ad2b8e3bfd3c86ad47066532c338f7636496c8bd498a8bfb80f27864336c()
    )

    secret.use_secret_as_env(
        task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b,
        "dashboard-dspa-secret",
        {
            "AWS_ACCESS_KEY_ID": "AWS_ACCESS_KEY_ID",
            "AWS_SECRET_ACCESS_KEY": "AWS_SECRET_ACCESS_KEY",
        },
    )

    task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b.set_display_name("Docling")

    task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b.set_env_variable(
        name="ELYRA_RUNTIME_ENV", value="kfp"
    )

    task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b.set_env_variable(
        name="ELYRA_ENABLE_PIPELINE_INFO", value="True"
    )

    task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b.set_env_variable(
        name="ELYRA_WRITABLE_CONTAINER_DIR", value="/tmp"
    )

    task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b.set_env_variable(
        name="ELYRA_RUN_NAME", value="{{workflow.uid}}"
    )

    add_pod_label(
        task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b, "elyra/node-type", "notebook-script"
    )

    add_pod_label(
        task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b,
        "elyra/pipeline-name",
        "docling_elyra_summit",
    )

    add_pod_label(
        task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b, "elyra/pipeline-version", ""
    )

    add_pod_label(
        task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b, "elyra/experiment-name", ""
    )

    add_pod_label(
        task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b, "elyra/node-name", "Docling"
    )

    add_pod_annotation(
        task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b,
        "elyra/node-file-name",
        """instruct-generate/ingest-summit.ipynb""",
    )

    add_pod_annotation(
        task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b,
        "elyra/pipeline-source",
        """docling_elyra_summit.pipeline""",
    )

    task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b.after(
        task_e4165c2f_c2b3_4415_92b8_a0d36b4b4e69
    )

    # Task for node 'Combine Markdown'
    task_db01761f_d8d8_4a07_907c_f4af071227c6 = (
        factory_cef76bf6174727948a57ad8a68a91b5685a3accc843a11217591cbc1ab9da6b5()
    )

    secret.use_secret_as_env(
        task_db01761f_d8d8_4a07_907c_f4af071227c6,
        "dashboard-dspa-secret",
        {
            "AWS_ACCESS_KEY_ID": "AWS_ACCESS_KEY_ID",
            "AWS_SECRET_ACCESS_KEY": "AWS_SECRET_ACCESS_KEY",
        },
    )

    task_db01761f_d8d8_4a07_907c_f4af071227c6.set_display_name("Combine Markdown")

    task_db01761f_d8d8_4a07_907c_f4af071227c6.set_env_variable(
        name="ELYRA_RUNTIME_ENV", value="kfp"
    )

    task_db01761f_d8d8_4a07_907c_f4af071227c6.set_env_variable(
        name="ELYRA_ENABLE_PIPELINE_INFO", value="True"
    )

    task_db01761f_d8d8_4a07_907c_f4af071227c6.set_env_variable(
        name="ELYRA_WRITABLE_CONTAINER_DIR", value="/tmp"
    )

    task_db01761f_d8d8_4a07_907c_f4af071227c6.set_env_variable(
        name="ELYRA_RUN_NAME", value="{{workflow.uid}}"
    )

    add_pod_label(
        task_db01761f_d8d8_4a07_907c_f4af071227c6, "elyra/node-type", "notebook-script"
    )

    add_pod_label(
        task_db01761f_d8d8_4a07_907c_f4af071227c6,
        "elyra/pipeline-name",
        "docling_elyra_summit",
    )

    add_pod_label(
        task_db01761f_d8d8_4a07_907c_f4af071227c6, "elyra/pipeline-version", ""
    )

    add_pod_label(
        task_db01761f_d8d8_4a07_907c_f4af071227c6, "elyra/experiment-name", ""
    )

    add_pod_label(
        task_db01761f_d8d8_4a07_907c_f4af071227c6, "elyra/node-name", "Combine_Markdown"
    )

    add_pod_annotation(
        task_db01761f_d8d8_4a07_907c_f4af071227c6,
        "elyra/node-file-name",
        """elyra_docling_rh_summit/openshift_solution/combine_markdown.py""",
    )

    add_pod_annotation(
        task_db01761f_d8d8_4a07_907c_f4af071227c6,
        "elyra/pipeline-source",
        """docling_elyra_summit.pipeline""",
    )

    task_db01761f_d8d8_4a07_907c_f4af071227c6.after(
        task_9da8883d_0641_40ae_8fa3_ac56dcc1fb5b
    )

    # Task for node 'HITL Markdown'
    task_e91d428b_1397_4f77_9514_3f29be067bcd = (
        factory_7feeebb9633293000f7aa7fae9d0c8f59580d52f0c16ff53df5e25b4c385e90e()
    )

    secret.use_secret_as_env(
        task_e91d428b_1397_4f77_9514_3f29be067bcd,
        "dashboard-dspa-secret",
        {
            "AWS_ACCESS_KEY_ID": "AWS_ACCESS_KEY_ID",
            "AWS_SECRET_ACCESS_KEY": "AWS_SECRET_ACCESS_KEY",
        },
    )

    task_e91d428b_1397_4f77_9514_3f29be067bcd.set_display_name("HITL Markdown")

    add_pod_annotation(
        task_e91d428b_1397_4f77_9514_3f29be067bcd,
        "elyra/node-user-doc",
        """**H**uman **I**n **T**he **L**oop step""",
    )

    task_e91d428b_1397_4f77_9514_3f29be067bcd.set_env_variable(
        name="ELYRA_RUNTIME_ENV", value="kfp"
    )

    task_e91d428b_1397_4f77_9514_3f29be067bcd.set_env_variable(
        name="ELYRA_ENABLE_PIPELINE_INFO", value="True"
    )

    task_e91d428b_1397_4f77_9514_3f29be067bcd.set_env_variable(
        name="ELYRA_WRITABLE_CONTAINER_DIR", value="/tmp"
    )

    task_e91d428b_1397_4f77_9514_3f29be067bcd.set_env_variable(
        name="ELYRA_RUN_NAME", value="{{workflow.uid}}"
    )

    add_pod_label(
        task_e91d428b_1397_4f77_9514_3f29be067bcd, "elyra/node-type", "notebook-script"
    )

    add_pod_label(
        task_e91d428b_1397_4f77_9514_3f29be067bcd,
        "elyra/pipeline-name",
        "docling_elyra_summit",
    )

    add_pod_label(
        task_e91d428b_1397_4f77_9514_3f29be067bcd, "elyra/pipeline-version", ""
    )

    add_pod_label(
        task_e91d428b_1397_4f77_9514_3f29be067bcd, "elyra/experiment-name", ""
    )

    add_pod_label(
        task_e91d428b_1397_4f77_9514_3f29be067bcd, "elyra/node-name", "HITL_Markdown"
    )

    add_pod_annotation(
        task_e91d428b_1397_4f77_9514_3f29be067bcd,
        "elyra/node-file-name",
        """elyra_docling_rh_summit/openshift_solution/HITL_MarkdownReview.ipynb""",
    )

    add_pod_annotation(
        task_e91d428b_1397_4f77_9514_3f29be067bcd,
        "elyra/pipeline-source",
        """docling_elyra_summit.pipeline""",
    )

    task_e91d428b_1397_4f77_9514_3f29be067bcd.after(
        task_db01761f_d8d8_4a07_907c_f4af071227c6
    )

    # Task for node 'QNA Generator'
    task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe = (
        factory_32bd7762a69c1f1e4e174e925beabd1540ed2f146114776f75b4f70d80c62b39()
    )

    secret.use_secret_as_env(
        task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe,
        "dashboard-dspa-secret",
        {
            "AWS_ACCESS_KEY_ID": "AWS_ACCESS_KEY_ID",
            "AWS_SECRET_ACCESS_KEY": "AWS_SECRET_ACCESS_KEY",
        },
    )

    task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe.set_display_name("QNA Generator")

    task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe.set_env_variable(
        name="ELYRA_RUNTIME_ENV", value="kfp"
    )

    task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe.set_env_variable(
        name="ELYRA_ENABLE_PIPELINE_INFO", value="True"
    )

    task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe.set_env_variable(
        name="ELYRA_WRITABLE_CONTAINER_DIR", value="/tmp"
    )

    task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe.set_env_variable(
        name="ELYRA_RUN_NAME", value="{{workflow.uid}}"
    )

    add_pod_label(
        task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe, "elyra/node-type", "notebook-script"
    )

    add_pod_label(
        task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe,
        "elyra/pipeline-name",
        "docling_elyra_summit",
    )

    add_pod_label(
        task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe, "elyra/pipeline-version", ""
    )

    add_pod_label(
        task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe, "elyra/experiment-name", ""
    )

    add_pod_label(
        task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe, "elyra/node-name", "QNA_Generator"
    )

    add_pod_annotation(
        task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe,
        "elyra/node-file-name",
        """instruct-generate/injest-splitter.ipynb""",
    )

    add_pod_annotation(
        task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe,
        "elyra/pipeline-source",
        """docling_elyra_summit.pipeline""",
    )

    task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe.after(
        task_e91d428b_1397_4f77_9514_3f29be067bcd
    )

    # Task for node 'HITL QNA'
    task_b816de19_69a2_4660_a2af_ca808be3581a = (
        factory_ba3ac441334dc976170e6a30252eb710ce7ab22a9bfce48e2b341550b4aa9a8f()
    )

    secret.use_secret_as_env(
        task_b816de19_69a2_4660_a2af_ca808be3581a,
        "dashboard-dspa-secret",
        {
            "AWS_ACCESS_KEY_ID": "AWS_ACCESS_KEY_ID",
            "AWS_SECRET_ACCESS_KEY": "AWS_SECRET_ACCESS_KEY",
        },
    )

    task_b816de19_69a2_4660_a2af_ca808be3581a.set_display_name("HITL QNA")

    add_pod_annotation(
        task_b816de19_69a2_4660_a2af_ca808be3581a,
        "elyra/node-user-doc",
        """**H**uman **I**n **T**he **L**oop step""",
    )

    task_b816de19_69a2_4660_a2af_ca808be3581a.set_env_variable(
        name="ELYRA_RUNTIME_ENV", value="kfp"
    )

    task_b816de19_69a2_4660_a2af_ca808be3581a.set_env_variable(
        name="ELYRA_ENABLE_PIPELINE_INFO", value="True"
    )

    task_b816de19_69a2_4660_a2af_ca808be3581a.set_env_variable(
        name="ELYRA_WRITABLE_CONTAINER_DIR", value="/tmp"
    )

    task_b816de19_69a2_4660_a2af_ca808be3581a.set_env_variable(
        name="ELYRA_RUN_NAME", value="{{workflow.uid}}"
    )

    add_pod_label(
        task_b816de19_69a2_4660_a2af_ca808be3581a, "elyra/node-type", "notebook-script"
    )

    add_pod_label(
        task_b816de19_69a2_4660_a2af_ca808be3581a,
        "elyra/pipeline-name",
        "docling_elyra_summit",
    )

    add_pod_label(
        task_b816de19_69a2_4660_a2af_ca808be3581a, "elyra/pipeline-version", ""
    )

    add_pod_label(
        task_b816de19_69a2_4660_a2af_ca808be3581a, "elyra/experiment-name", ""
    )

    add_pod_label(
        task_b816de19_69a2_4660_a2af_ca808be3581a, "elyra/node-name", "HITL_QNA"
    )

    add_pod_annotation(
        task_b816de19_69a2_4660_a2af_ca808be3581a,
        "elyra/node-file-name",
        """elyra_docling_rh_summit/openshift_solution/HITL_qna_review.ipynb""",
    )

    add_pod_annotation(
        task_b816de19_69a2_4660_a2af_ca808be3581a,
        "elyra/pipeline-source",
        """docling_elyra_summit.pipeline""",
    )

    task_b816de19_69a2_4660_a2af_ca808be3581a.after(
        task_8a30ef71_5ae7_4c47_b3b9_e1c583ed99fe
    )


if __name__ == "__main__":
    from pathlib import Path

    kfp.compiler.Compiler().compile(
        pipeline_func=generated_pipeline,
        package_path=Path(__file__).with_suffix(".yaml").name,
    )
